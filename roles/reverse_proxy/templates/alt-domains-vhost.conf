upstream {{ item.name }} {
    server {{ item.address }};
}
server {
    listen 443 ssl;
    server_name {{ item.domain }};
    ssl_dhparam /usr/local/etc/nginx/dhparams.pem;
    ssl_certificate /usr/local/etc/ssl/acme/fullchain.pem;
    ssl_certificate_key /usr/local/etc/ssl/acme/private/privkey.pem;

    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256";
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
    keepalive_timeout 70;

    error_page  500 502 503 504  /50x.html;
    location / {
        {% if require_authentication|default(True) -%}
        # Require authentication
        set $ngo_callback_host  "{{ item.domain }}";
        include reverse-proxy/google-oauth.conf;
        {%- endif %}

        # Don't use the upstream port when redirecting
        port_in_redirect off;

        # Enable websockets, set some headers etc.
        include proxy_params;

        {% if item.trust_ssl is defined -%}
        proxy_ssl_trusted_certificate /usr/local/etc/ssl/nginx_trusted/{{ item.trust_ssl|basename }};
        proxy_ssl_verify off;
        proxy_pass https://{{ item.name }};
        {%- else -%}
        proxy_pass http://{{ item.name }};
        {%- endif %}

        {% if item.inline_config is defined -%}
        {{ item.inline_config|indent(4) }}
        {%- endif %}

        access_log /var/log/nginx/{{ item.name }}-access.log;
        error_log /var/log/nginx/{{ item.name }}-error.log;
    }
}

