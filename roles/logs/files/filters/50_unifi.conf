filter {
  if [program] == "unifi" {
    grok {
      patterns_dir => ["/usr/local/etc/logstash/patterns"]
      match => { "message" => "^%{UNIFI_LOG}$" }
      overwrite => [ "message" ]
      id => "parse unifi log message"
    }
    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS" ]
      remove_field => [ "timestamp" ]
      id => "parse unifi date"
    }
    if [message] =~ "from \[[^\]]+\]\(Main, [^)]+\): state=CONNECTED, ext\/stun_ip=[^,]+, dev_ip=[^,]+, up=\d+" {
      mutate {
        replace => { "unifi_loglevel" => "DEBUG" }
        id => "downgrade unifi uptime message to DEBUG"
      }
    }
    if [unifi_loglevel] == "ERROR" {
      mutate {
        add_field => { "loglevel_name" => "error" }
        remove_field => [ "unifi_loglevel" ]
        id => "parse unifi ERROR log level"
      }
    }
    if [unifi_loglevel] == "WARN" {
      mutate {
        add_field => { "loglevel_name" => "warning" }
        remove_field => [ "unifi_loglevel" ]
        id => "parse unifi WARN log level"
      }
    }
    if [unifi_loglevel] == "INFO" {
      mutate {
        add_field => { "loglevel_name" => "info" }
        remove_field => [ "unifi_loglevel" ]
        id => "parse unifi INFO log level"
      }
    }
    if [unifi_loglevel] == "DEBUG" {
      mutate {
        add_field => { "loglevel_name" => "debug" }
        remove_field => [ "unifi_loglevel" ]
        id => "parse unifi DEBUG log level"
      }
    }
  }
}
